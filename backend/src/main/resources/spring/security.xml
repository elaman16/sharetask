<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"  
 	xmlns:context="http://www.springframework.org/schema/context"
 	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
						http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<util:properties id="applicationProps" location="classpath:application.properties"/>

	<http auto-config="false" use-expressions="true" entry-point-ref="loginUrlAuthenticationEntryPoint">
		<!-- <form-login /> login will be done programmatically -->
		<access-denied-handler error-page="/denied" />
		<!-- <logout invalidate-session="true" logout-url="/api/user/logout" /> login will be done programmatically -->
		<remember-me />

		<intercept-url pattern="/" access="permitAll" />
		<intercept-url pattern="/webapp" access="permitAll" />
		<intercept-url pattern="/resources-webapp-#{applicationProps['application.version']}/**" access="permitAll" />
		<intercept-url pattern="/resources-web-#{applicationProps['application.version']}/**" access="permitAll" />
		<intercept-url pattern="/api/info" access="permitAll" />
		<intercept-url pattern="/api/user/login/status" access="permitAll" />
		<intercept-url pattern="/api/user/login" access="permitAll" />
		<intercept-url pattern="/api/user/confirm" access="permitAll" />
		<intercept-url pattern="/api/user" method="POST" access="permitAll" />
		<intercept-url pattern="/api/user/logout" access="permitAll" />
		<intercept-url pattern="/**" access="isAuthenticated()" />
	</http>

	<beans:bean id="loginUrlAuthenticationEntryPoint" class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint" />
	
	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="userService">
			<password-encoder ref="passwordEncoder">
				<salt-source ref="saltSource"/>
			</password-encoder>
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
		<beans:constructor-arg name="strength" value="512" />
	</beans:bean>

	<beans:bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource"
		p:userPropertyToUse="salt" />

	<global-method-security pre-post-annotations="enabled">
		<expression-handler ref="expressionHandler"/>
	</global-method-security>

	<beans:bean id="expressionHandler"
		class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
		<beans:property name="permissionEvaluator" ref="permissionEvaluator" />
	</beans:bean>

	<beans:bean id="permissionEvaluator" class="org.sharetask.security.AccessPermissionEvaluator">
		<beans:constructor-arg index="0">
			<beans:map key-type="java.lang.String" value-type="org.sharetask.security.Permission">
				<beans:entry key="isTaskAssignee" value-ref="taskAssigneePermission" />
				<beans:entry key="isTaskAssigneeOrCreator" value-ref="taskAssigneeOrCreatorPermission" />
				<beans:entry key="isWorkspaceMemberOrOwner" value-ref="workspaceMemberOrOwnerPermission" />
				<beans:entry key="isWorkspaceOwner" value-ref="workspaceOwnerPermission" />
			</beans:map>
		</beans:constructor-arg>
	</beans:bean>
	
	<beans:bean id="taskAssigneePermission" class="org.sharetask.security.TaskAssigneePermission">
		<beans:property name="taskRepository" ref="taskRepository"/>
	</beans:bean>
	
	<beans:bean id="taskAssigneeOrCreatorPermission" class="org.sharetask.security.TaskAssigneeOrCreatorPermission">
		<beans:property name="taskRepository" ref="taskRepository"/>
	</beans:bean>
	
	<beans:bean id="workspaceMemberOrOwnerPermission" class="org.sharetask.security.WorkspaceMemberOrOwnerPermission">
		<beans:property name="workspaceRepository" ref="workspaceRepository"/>
	</beans:bean>

	<beans:bean id="workspaceOwnerPermission" class="org.sharetask.security.WorkspaceOwnerPermission">
		<beans:property name="workspaceRepository" ref="workspaceRepository"/>
	</beans:bean>

</beans:beans>