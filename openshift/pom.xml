<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.sharetask</groupId>
		<artifactId>parent</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>
	<artifactId>openshift</artifactId>
	<packaging>pom</packaging>
	<name>ShareTask: openshift</name>

	<profiles>
		<profile>
			<id>prod</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<dependencies>
							<dependency>
								<groupId>org.apache.ant</groupId>
								<artifactId>ant-jsch</artifactId>
								<version>1.9.1</version>
							</dependency>
							<dependency>
								<groupId>com.jcraft</groupId>
								<artifactId>jsch</artifactId>
								<version>0.1.50</version>
							</dependency>
						</dependencies>	
						<executions>
							<execution>
								<id>id.process-resources</id>
								<phase>process-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<macrodef name = "git">
										    <attribute name = "command" />
										    <attribute name = "dir" default = "" />
										    <element name = "args" optional = "true" />
										    <sequential>
										        <echo message = "git @{command}" />
										        <exec executable = "git" dir = "@{dir}">
										            <arg value = "@{command}" />
										            <args/>
										        </exec>
										    </sequential>
										</macrodef>
										<git command = "clone">
										    <args>
										        <arg value = "ssh://${openshift.username}@${openshift.host}/~/git/${openshift.appname}.git/" />
										        <arg value = "${target.directory}/web" />
										    </args>
										</git>
									</target>
								</configuration>
							</execution>
							<!-- deploy database -->
							<execution>
								<id>id.deploy-db-copy-war</id>
								<phase>install</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<echo>Get data dir.</echo>
										<sshexec host="${openshift.host}" username="${openshift.username}" command="echo $OPENSHIFT_DATA_DIR"
											keyfile="${user.home}/.ssh/id_rsa" outputproperty="openshift.data.dir" />
										<script language="javascript">
											<![CDATA[
											var myproperty = project.getProperty("openshift.data.dir");
											project.setProperty("openshift.data.dir", myproperty.trim())
											]]>
										</script>
							
										<echo>Clean up</echo>
										<sshexec host="${openshift.host}" username="${openshift.username}" keyfile="${user.home}/.ssh/id_rsa"
											command="rm -rf ${openshift.data.dir}deploy;mkdir ${openshift.data.dir}deploy" />
							
										<echo>Copy data</echo>
										<scp file="${basedir}/../database/${target.directory}/database-distribution.tar.gz" todir="${openshift.username}@${openshift.host}:${openshift.data.dir}deploy"
											keyfile="${user.home}/.ssh/id_rsa" />
										<scp file="${basedir}/../backend/${target.directory}/sharetask-${project.version}.war" todir="${openshift.username}@${openshift.host}:${openshift.data.dir}"
											keyfile="${user.home}/.ssh/id_rsa" />
							
										<echo>Extract data</echo>
										<sshexec host="${openshift.host}" username="${openshift.username}" keyfile="${user.home}/.ssh/id_rsa"
											command="cd ${openshift.data.dir}deploy;tar -xvvf database-distribution.tar.gz" />
							
										<echo>deploy datatbase</echo>
										<sshexec host="${openshift.host}" username="${openshift.username}" keyfile="${user.home}/.ssh/id_rsa"
											command="cd ${openshift.data.dir}deploy/database; mvn -pl database -P prod-db-deploy process-resources liquibase:update; rm -rf ${openshift.data.dir}deploy" />
									</target>
								</configuration>
							</execution>		
							<!-- deploy application -->
							<execution>
								<id>id.install-application</id>
								<phase>install</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<macrodef name = "git">
										    <attribute name = "command" />
										    <attribute name = "dir" default = "" />
										    <element name = "args" optional = "true" />
										    <sequential>
										        <echo message = "git @{command}" />
										        <exec executable = "git" dir = "@{dir}">
										            <arg value = "@{command}" />
										            <args/>
										        </exec>
										    </sequential>
										</macrodef>
										<echo file="${target.directory}/web/build.info">
										   build=${BUILD_NUMBER}
										</echo>
 										<git command = "add" dir = "${target.directory}/web">
 										    <args>
										        <arg value = "." />
										    </args>
										</git>
										<git command = "commit" dir = "${target.directory}/web">
										    <args>
										        <arg value = "-m" />
										        <arg value = "deploy new version" />
										    </args>
										</git>
										<git command = "push" dir = "${target.directory}/web" />									
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
